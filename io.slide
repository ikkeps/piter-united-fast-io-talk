Файловое IO
Быстро и сложно
6 Jun 2015

Александр Неганов
Go developer, PropellerAds
ikkeps@gmail.com
http://github.com/ikkeps
@ikkeps

* Наша задача
- Парсить логи в сотни гигабайт
- Писать (иногда) в разные файлы
- Чем быстрее, тем лучше (почти-реалтайм почти-статистика)    

* Железо
- Обычные диски на пару терабайт
- 250 МиБ/сек
- сотня-две iops
- не raid

* Какие варианты
- mmap
- direct IO
- можно добавить vector IO (readv/writev)
- компрессия

* Mmap
- можно, если есть желание нахачить работу библиотеки, которая с файлами не работает (но лучше не надо)
- полагаемся на OS, в основном
- много нюансов

* Direct IO
- open с O_DIRECT
- Buffer align
- Быстро!
- Есть библиотеки для Go

* Vectored IO
- экономим на syscall'ах
- readv/writev - передаем список буферов
- vector limit (1024, как правило)
- если c O_DIRECT, каждый буффер должен быть выровнен

* Выбрали:
- Direct IO
- Компрессия! (lz4 ftw!, но зависит от нужд, можно и snappy)
- Двойная буфферизация! (одна горутина читает, другая обрабатывает, третья пишет)

* Но не всё так просто (1)
- Pool буферов ?
- Полагаемся на сборщик мусора?
- Зависшие ссылки на буффера.

* Но не всё так просто (2)
- Direct IO не вяжется со стандартной библиотекой...
- ... компрессия, чтение, буфферизация, куча нужных функций не работают
- Свои косты... обёртки

* Можно замутить своё планирование IO
- ...если много файлов
- диск не должен простаивать
- лучше столько же iops, но меньше burst

* Важно
- Смотрите что у вас за диск/raid
- Меньше IOPS, больше буферы
- Грамотно спроектировать архитектуру
- Больше коментов в коде, потому что нетривиально
- Если упёрлись в CPU - пересмотреть алгорим компресии, написать свои функции парсинга

* осталось за кадром
- Планировщик дисковых операций - обратитесь к вашему системному администратору.
- sendfile/splice
- Более эффективные алгоритмы работы со строками внутри буфферов
- Сравнение алгоритмов компрессии

* Ссылки
.link https://github.com/Cyan4973/lz4
.link https://github.com/pierrec/lz4
.link http://godoc.org/github.com/ncw/directio
.link http://lwn.net
man 2 open
man 2 mmap
man 2 writev/readv

